
package net.scnetwork.bus.clients.fias;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * Служба получения обновлений
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "DownloadService", targetNamespace = "http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", wsdlLocation = "http://fias.nalog.ru/WebServices/Public/DownloadService.asmx?WSDL")
public class DownloadService extends Service {

    private final static URL DOWNLOADSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(net.scnetwork.bus.clients.fias.DownloadService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = net.scnetwork.bus.clients.fias.DownloadService.class.getResource(".");
            url = new URL(baseUrl, "http://fias.nalog.ru/WebServices/Public/DownloadService.asmx?WSDL");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://fias.nalog.ru/WebServices/Public/DownloadService.asmx?WSDL', retrying as a local file");
            logger.warning(e.getMessage());
        }
        DOWNLOADSERVICE_WSDL_LOCATION = url;
    }

    /**
     * Конструктор
     * @param wsdlLocation wsdl
     * @param serviceName имя
     */
    public DownloadService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * Конструктор по умолчанию
     */
    public DownloadService() {
        super(DOWNLOADSERVICE_WSDL_LOCATION, new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadService"));
    }

    /**
     * 
     * @return
     *     returns DownloadServiceSoap
     */
    @WebEndpoint(name = "DownloadServiceSoap")
    public DownloadServiceSoap getDownloadServiceSoap() {
        return super.getPort(new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadServiceSoap"), DownloadServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DownloadServiceSoap
     */
    @WebEndpoint(name = "DownloadServiceSoap")
    public DownloadServiceSoap getDownloadServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadServiceSoap"), DownloadServiceSoap.class, features);
    }

}
